
# Names of administrative boundaries.
# We could want to sort the relations in ascending order of admin_level
# and alphabetically by name first.
# Currently, the matching relations will be processed and the names
# appended to the boundary lines in an arbitrary order.


(type=boundary | type=multipolygon) & boundary=administrative & name=*
	{ apply
	  {
	    set mkgmap:boundary_name='$(mkgmap:boundary_name)/${name}' | '${name}';
	  }
	}

route=foot | route=hiking   { apply { add foot=yes; } }

(route=bicycle | route=mtb) &
	    (
	    network=icn |
	    icn=yes |
	    network=ncn |
	    ncn=yes
	      )
		{
		apply
		    {
		    set icn_network=yes ;
		    set cycle_network=yes ;
		    set cn_name='$(cn_name),${ref}' |
		    '$(cn_name),${name}' |
		    '${ref}' | '${name}'
		    }
		 }

(route=bicycle | route=mtb) &
	    (
	    network=rcn |
	    rcn=yes |
	    network=tcn |
	    tcn=yes
	      )
		{
		apply
		    {
		    set rcn_network=yes ;
		    set cycle_network=yes ;
		    set cn_name='$(cn_name),${ref}' |
		    '$(cn_name),${name}' |
		    '${ref}' | '${name}'
		    }
		 }

(route=bicycle | route=mtb) &
	    (
	    network=lcn |
	    lcn=yes
	      )
		{
		apply
		    {
		    set lcn_network=yes ;
		    set cycle_network=yes ;
		    set cn_name='$(cn_name),${ref}' |
		    '$(cn_name),${name}' |
		    '${ref}' | '${name}'
		    }
		 }

# European E-Road network

route=road & network=e-road
        { apply
          {
            add ref='${ref}';
            add int_ref='${int_ref}';
            add network=e-road
            }
          }

# Public transportation routes.
# We could want to sort the matching relations by ref first.
type=route
  & (route=bus|
      route=trolleybus|
      route=ferry|
      route=subway|
      route=train|
      route=tram)
  & (ref=* |
      name=*)
    {
      add ref='${name}';
      apply {
        #set route_ref='$(route_ref),${ref}' | '${ref}';
        set route_ref='$(route_ref),${ref|not-contained:,:route_ref}' | '$(route_ref)' | '${ref}';
        set mkgmap:relref='${ref}';
        apply role=passengers {
        set route_ref='$(route_ref),${mkgmap:relref}' | '${mkgmap:relref}';
            }
      delete mkgmap:relref;
            }
    }
