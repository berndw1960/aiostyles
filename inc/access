# Define the access restrictions
# The following tags define the restrictions:
# mkgmap:bicycle
# mkgmap:foot
# mkgmap:car
# mkgmap:truck
# mkgmap:taxi
# mkgmap:bus
# mkgmap:emergency
# A class is not allowed to use the way if its tag is set to 'no'

# Germany (DEU)

highway=* & motorroad=yes
        & mkgmap:country=DEU
                        {
                          add bicycle=no;
                          add foot=no
                          }

(highway=motorway |
    highway=motorway_link |
    highway=trunk |
    highway=trunk_link )
        & mkgmap:country=DEU
                      {
                        add bicycle=no;
                        add foot=no
                        }

# Belgium (BEL)

highway=trunk & mkgmap:country=BEL      { add bicycle=no; add foot=no }
highway=cycleway & mkgmap:country=BEL   { add foot=yes }
highway=bridleway & mkgmap:country=BEL  { add foot=yes }

# The Netherlands (NLD)

highway=trunk & mkgmap:country=NLD      { add bicycle=no; add foot=no }
highway=cycleway & mkgmap:country=NLD   { add foot=yes }
highway=bridleway & mkgmap:country=NLD  { add foot=yes }

# Spain (ESP)

highway=trunk & mkgmap:country=ESP      { add bicycle=yes; add foot=yes }
highway=bridleway & mkgmap:country=ESP  { add bicycle=yes; add foot=yes }

# other

highway=* & motorroad=yes
                        {
                          add bicycle=no;
                          add foot=no
                          }

(highway=motorway |
    highway=motorway_link |
    highway=trunk |
    highway=trunk_link )
                      {
                        add bicycle=no;
                        add foot=no
                        }

## rules to prevent use of bad ways
highway=track
            & mkgmap:unpaved=1
            & (tracktype~'grade[4-6]' |
               tracktype!=*)
                {
                  add foot=yes;
                  add access=no;
                }

highway=path
           & (
              smoothness~'.*(bad|horrible|impassable)' |
              sac_scale~'.*(mountain|alpine)_hiking' |
              mtb:scale>0 |
              mtb:scale:imba>0 |
              width<1
              )
                {
                  add foot=yes;
                  add bicycle=no;
                  add access=no;
                  }

highway=path
                { add foot=yes;
                  add bicycle=yes;
                  add access=no
                  }


highway=steps |
  (highway=pedestrian & area!=yes) |
  highway=footway |
  railway=platform
                {
                  add foot=yes;
                  add access=no
                  }

highway=bridleway
                { add access=no
                  }

highway=cycleway
                {
                  add bicycle=yes;
                  add access=no }

highway=* & cycle_network=yes
              { set bicycle=yes }


highway=* & ramp=yes
                    {
                      add foot=yes;
                      add bicyle=yes
                      }

access=agricultural
                      { set access=no;
                        add foot=yes
                        }

access=customers
                      { set access=no;
                        add foot=yes
                        }

access=private
                      { set access=no;
                        }

vehicle=*            {
                        add bicycle='${vehicle}';
                        add motor_vehicle='${vehicle}';
                        }

motor_vehicle=*      {
                        add motorcar='${motor_vehicle}';
                        add goods='${motor_vehicle}';
                        add hgv='${motor_vehicle}';
                        add psv='${motor_vehicle}';
                        add emergency='${motor_vehicle}';
                        }

psv=*                 {
                        add taxi='${psv}';
                        add bus='${psv}';
                        }

# throughroute cannot be handled differently for different vehicle types
# Therefore we have to choose one vehicle type - and the winner is: motorcar
motorcar=destination
                      {
                        set mkgmap:throughroute=no;
                        set motorcar=yes
                        }

access=destination
                      {
                        set mkgmap:throughroute=no;
                        set access=yes
                        }

# Normalize all values that indicate a restriction to 'no'
foot=private          | foot=agricultural         | foot=customers              { set foot=no }
bicycle=private       | bicycle=agricultural      | bicycle=customers           { set bicycle=no }
motorcar=private      | motorcar=agricultural     | motorcar=customers          { set motorcar=no }
goods=private         | goods=agricultural        | goods=customers             { set goods=no }
hgv=private           | hgv=agricultural          | hgv=customers               { set hgv=no }
bus=private           | bus=agricultural          | bus=customers               { set bus=no }
taxi=private          | taxi=agricultural         | taxi=customers              { set taxi=no }
emergency=private     | emergency=agricultural    | emergency=customers         { set emergency=no }

# Normalize all values that indicate a restriction to 'yes'
foot=designated       | foot=permissive           | foot=official               { set foot=yes }
bicycle=designated    | bicycle=permissive        | bicycle=official            { set bicycle=yes }
motorcar=designated   | motorcar=permissive       | motorcar=official           { set motorcar=yes }
goods=designated      | goods=permissive          | goods=official              { set goods=yes }
hgv=designated        | hgv=permissive            | hgv=official                { set hgv=yes }
bus=designated        | bus=permissive            | bus=official                { set bus=yes }
taxi=designated       | taxi=permissive           | taxi=official               { set taxi=yes }
emergency=designated  | emergency=permissive      | emergency= official         { set emergency=yes }

# Copy the OSM access tags to the mkgmap internal tags
foot=*       { set mkgmap:foot='${foot}' }
bicycle=*    { set mkgmap:bicycle='${bicycle}' }
motorcar=*   { set mkgmap:car='${motorcar}' }
goods=*      { set mkgmap:delivery='${goods}' }
hgv=*        { set mkgmap:truck='${hgv}' }
bus=*        { set mkgmap:bus='${bus}' }
taxi=*       { set mkgmap:taxi='${taxi}' }
emergency=*  { set mkgmap:emergency='${emergency}' }

## a catchall to define all restrictions that are not already set
access=*       {  addaccess '${access}' }

# Check for carpool lane (they are not really supported yet so these lines are commented)
# hov=* { add carpool='${hov}' }
# (carpool=yes | carpool=designated | carpool=permissive | carpool=official)     { set mkgmap:carpool=yes }

